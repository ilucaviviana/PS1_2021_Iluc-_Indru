#include <LiquidCrystal.h>
const int rs = 12, en = 11, d4 = 5, d5 = 4, d6 = 3, d7 = 2;
LiquidCrystal lcd(rs, en, d4, d5, d6, d7);
unsigned int h=22,m=59,s=57;
int numar_CAN=0;
float TEMP=0;

void timer()
{
  cli();
  TCCR1A=0;
  TCCR1B=0;
  TCCR1C=0;
  TCCR1B = TCCR1B | (1 << WGM12);
  TCCR1B =(TCCR1B |((1 << CS10)|(1 << CS12))); //prescaler 1024 
  OCR1A = 15625;
}

ISR(ADC_vect)  //temperatura
{
   lcd.setCursor(0,0);
   numar_CAN = ADC;
   ADCSRA |= ADCSRA |(1 << ADSC); // Pornim o noua conversie.
   TEMP=float(((numar_CAN*(float)5/1023) - 0.5)*100);
   lcd.print("TEMP= ");
   lcd.print(TEMP);
   lcd.print(" C");

}

void ADCinit()
{
  ADCSRA |=ADCSRA |(1<< ADEN); //enable ADC
  ADCSRA |=ADCSRA |( 1<< ADIE); 
  ADMUX |= ADMUX |(1<< REFS0); //AVcc with external capacitor at Aref pin
  ADCSRA |= ADCSRA |(1<< ADSC); //ADC start conversion 
}

ISR(TIMER1_OVF_vect) //ora 
{
  if(s > 59)
  {
    s = 0;
    m++;
    lcd.clear();
  }
  
  if(m > 59)
  {
   s = 0;
   m = 0;
   h++;
   lcd.clear();
  }
  
  if(h == 24)
  {
  	s = 0;
    m = 0;
    h = 0;
    lcd.clear();
  }
  
  lcd.setCursor(0, 1);
  lcd.print("ORA: ");
  
  lcd.print(h);
  lcd.print(":");
  
  lcd.print(m);
  lcd.print(":");
  
  lcd.print(s);
  
   s++;
}



int main()
{
  lcd.begin(16,2);
  ADCinit ();
  
  TIMSK1 |= 1 << TOIE1;	//registrul de timer interrupt, bitul TOIE1 setat pt a permite intrerupere prin overflow
  TCNT1 = 49910;
  
  timer();
  
  sei();
  while(1)
  {
  }
  
}
